#define SRAM_END 0x20000FFF
#define STACK_TOP SRAM_END

#define NVIC_ISER 0xE000E100
#define RCC_APB2ENR 0x4002101C
#define TIM3_PSC 0x40000428
#define TIM3_ARR 0x4000042C
#define TIM3_DIER 0x4000040C
#define TIM3_CR1 0x40000400
#define RCC_AHBENR 0x40021014
#define TIM3_SR 0x40000410

#define GPIOB_ODR 0x48000414
#define GPIOB_BSRR 0x48000418
#define GPIOB_MODER 0x48000400

volatile int a;

void	ft_set()
{
	a = 1;
	*(unsigned long *)(GPIOB_ODR) |= 0x8;
}

void	ft_reset()
{
	a = 2;
	*(unsigned long *)(GPIOB_BSRR) |= 0x80000;
}

void	func()
{	
	if (a == 2)
		ft_set();
	else if (a == 1)
		ft_reset();

	//обнуляем счетчик
	*(unsigned long *)(TIM3_SR) &= (~0x1);
}

void	main()
{
	a = 2;
	//включение тактирования на шину AHB
	*(unsigned long *)(RCC_AHBENR) |= 0x40000;

	//включение тактирования на шину APB2
	*(unsigned long *)(RCC_APB2ENR) |= 0x2;

	//прогрев
	volatile unsigned long i = 0;
	i++;
	i++;

	*(unsigned long *)(GPIOB_MODER) |= 0x40;

	//настройка регистра PSR (делитель как то связанный с частотой)
	*(unsigned long *)(TIM3_PSC) |= 0x49;//499

	//настройка регистра ARR (до скольки считать таймеру)
	*(unsigned long *)(TIM3_ARR) |= 0x9;//62
	
	//настройка регистра DIER (говорит когда будет прерывание или как то так)
	*(unsigned long *)(TIM3_DIER) |= 0x2;

	//включение прерывания
        *(unsigned long *)(NVIC_ISER) |= 0x10000;

	//включение таймера
	*(unsigned long *)(TIM3_CR1) |= 0x1;

	func();

	while (1);

}

unsigned long *vector_table[] __attribute__((section (".vector_table"))) = {
	(unsigned long *) STACK_TOP,
	(unsigned long *) main,
	(unsigned long *) "\0",
	(unsigned long *) "\0",
	(unsigned long *) "\0",
	(unsigned long *) "\0",
	(unsigned long *) func
};
